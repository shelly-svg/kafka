version: '3.8'
services:
  zookeeper-server-1:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper-server-1
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker-1:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka-broker-1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://kafka1:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 10
    depends_on:
      - zookeeper-server-1

  kafka-broker-2:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka-broker-2
    hostname: kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://kafka2:9093
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 10
    depends_on:
      - zookeeper-server-1

  kafka-broker-3:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka-broker-3
    hostname: kafka3
    ports:
      - "9094:9094"
    environment:
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19094,LISTENER_DOCKER_EXTERNAL://kafka3:9094
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19094,LISTENER_DOCKER_EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 10
    depends_on:
      - zookeeper-server-1

  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: init-kafka
    depends_on:
      - kafka-broker-1
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka broker is reachable
      kafka-topics --bootstrap-server kafka1:19092 --list

      echo -e 'Creating kafka topics ...'
      kafka-topics --bootstrap-server kafka1:19092 --create --if-not-exists --topic input-data --replication-factor 3 --partitions 20
      kafka-topics --bootstrap-server kafka1:19092 --create --if-not-exists --topic json-data --replication-factor 3 --partitions 20
      kafka-topics --bootstrap-server kafka1:19092 --create --if-not-exists --topic text-data --replication-factor 3 --partitions 20
      kafka-topics --bootstrap-server kafka1:19092 --create --if-not-exists --topic empty-data --replication-factor 3 --partitions 20

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka1:19092 --list
      "